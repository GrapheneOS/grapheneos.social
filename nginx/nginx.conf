# nginx 1.26.x

load_module modules/ngx_http_brotli_filter_module.so;
load_module modules/ngx_http_brotli_static_module.so;

error_log syslog:server=unix:/dev/log,nohostname;
# leave stderr open but minimize duplicate logging to it
error_log stderr emerg;

worker_processes auto;
worker_rlimit_nofile 16384;
worker_shutdown_timeout 1h;

events {
    worker_connections 4096;
}

http {
    root /var/empty;

    include mime.types;
    default_type application/octet-stream;

    charset utf-8;
    charset_types text/css text/javascript text/plain text/xml application/atom+xml;

    sendfile on;
    sendfile_max_chunk 256k;
    tcp_nopush on;
    keepalive_requests 256;
    keepalive_timeout 0;
    server_tokens off;
    msie_padding off;

    client_max_body_size 1k;
    client_body_buffer_size 1k;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 2k;
    http2_chunk_size 4k;

    reset_timedout_connection on;
    client_body_timeout 15s;
    client_header_timeout 15s;
    send_timeout 30s;

    max_ranges 1;

    resolver [::1];
    resolver_timeout 15s;

    http2_max_concurrent_streams 16;
    limit_conn_status 429;
    limit_conn_zone $binary_remote_addr zone=http-limit:10m;
    limit_conn http-limit 128;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers on;
    ssl_conf_command Options PrioritizeChaCha;

    ssl_certificate /etc/letsencrypt/live/grapheneos.social/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/grapheneos.social/privkey.pem;

    # maintained by nginx-rotate-session-ticket-keys in ramfs
    ssl_session_ticket_key session-ticket-keys/4.key;
    ssl_session_ticket_key session-ticket-keys/3.key;
    ssl_session_ticket_key session-ticket-keys/2.key;
    ssl_session_ticket_key session-ticket-keys/1.key;
    ssl_session_timeout 1d;
    ssl_buffer_size 4k;

    ssl_trusted_certificate /etc/letsencrypt/live/grapheneos.social/chain.pem;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_stapling_file /var/cache/certbot-ocsp-fetcher/grapheneos.social.der;

    log_format main '$connection-$connection_requests $remote_addr $remote_user $ssl_session_reused $ssl_protocol $server_protocol '
        '$host $request_method "$request_uri" $status $request_length $body_bytes_sent/$bytes_sent '
        '$request_time $upstream_connect_time/$upstream_header_time/$upstream_response_time '
        '$upstream_cache_status "$http_referer" "$http_user_agent"';
    access_log syslog:server=unix:/dev/log,nohostname main;
    log_subrequest on;
    log_not_found off;

    gzip_proxied any;
    gzip_vary on;

    if_modified_since before;

    aio threads;
    aio_write on;

    server {
        listen 80 default_server backlog=4096 rcvbuf=2048 sndbuf=2048;
        listen [::]:80 default_server backlog=4096 rcvbuf=2048 sndbuf=2048;

        # https://trac.nginx.org/nginx/ticket/2012
        location / {
            return 404;
        }
    }

    server {
        listen 80;
        listen [::]:80;
        server_name grapheneos.social www.grapheneos.social;

        location /.well-known/acme-challenge/ {
            root /srv/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 default_server ssl backlog=4096;
        listen [::]:443 default_server ssl backlog=4096;
        http2 on;
        ssl_reject_handshake on;

        # https://trac.nginx.org/nginx/ticket/2012
        location / {
            return 404;
        }
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;
        server_name www.grapheneos.social;

        keepalive_timeout 3m;

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        # https://trac.nginx.org/nginx/ticket/2012
        location / {
            return 301 https://grapheneos.social$request_uri;
        }
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    upstream backend {
        zone backend 32k;
        server unix:/run/mastodon-web/mastodon-web.sock max_conns=1024 max_fails=0;
    }

    upstream streaming {
        zone streaming 32k;
        server unix:/run/mastodon-streaming/mastodon-streaming.sock max_conns=1024 max_fails=0;
    }

    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=CACHE:10m inactive=7d max_size=1g;

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;
        server_name grapheneos.social;

        keepalive_timeout 3m;

        client_max_body_size 99m;

        root /var/lib/mastodon/public;

        gzip on;
        gzip_comp_level 6;
        gzip_min_length 256;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml image/x-icon;

        brotli on;
        brotli_min_length 256;
        brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml image/x-icon;

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        if ($request_uri ~ ^[^?]*//) {
            rewrite ^(.*)$ $1 permanent;
        }

        location / {
            try_files $uri @proxy;
        }

        location = /sw.js {
            add_header Cache-Control "public, max-age=604800, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
            try_files $uri =404;
        }

        location ~ ^/assets/ {
            add_header Cache-Control "public, max-age=2419200, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
            try_files $uri =404;
        }

        location ~ ^/avatars/ {
            add_header Cache-Control "public, max-age=2419200, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
            try_files $uri =404;
        }

        location ~ ^/emoji/ {
            add_header Cache-Control "public, max-age=2419200, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
            try_files $uri =404;
        }

        location ~ ^/headers/ {
            add_header Cache-Control "public, max-age=2419200, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
            try_files $uri =404;
        }

        location ~ ^/packs/.+\.(css|eot|js|svg|ttf)$ {
            add_header Cache-Control "public, max-age=2419200, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
            brotli_static on;
            gzip_static on;
            try_files $uri =404;
        }

        location ~ ^/packs/ {
            add_header Cache-Control "public, max-age=2419200, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
            try_files $uri =404;
        }

        location ~ ^/shortcuts/ {
            add_header Cache-Control "public, max-age=2419200, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
            try_files $uri =404;
        }

        location ~ ^/sounds/ {
            add_header Cache-Control "public, max-age=2419200, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
            try_files $uri =404;
        }

        location ~ ^/system/ {
            add_header Cache-Control "public, max-age=2419200, immutable";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
            add_header X-Content-Type-Options nosniff;
            add_header Content-Security-Policy "default-src 'none'; form-action 'none'";
            try_files $uri =404;
        }

        location ^~ /api/v1/streaming {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Proxy "";

            proxy_pass http://streaming;
            proxy_buffering off;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        location @proxy {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Proxy "";
            proxy_pass_header Server;

            proxy_pass http://backend;
            proxy_buffering on;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_cache CACHE;
            proxy_cache_valid 200 7d;
            proxy_cache_valid 410 24h;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            add_header X-Cached $upstream_cache_status;
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
            proxy_hide_header Strict-Transport-Security;
        }

        error_page 404 500 501 502 503 504 /500.html;
    }

    server {
        listen unix:/run/nginx/status.sock;

        access_log off;

        location = / {
            stub_status;
        }

        location / {
            return 404;
        }
    }
}
