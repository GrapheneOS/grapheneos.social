# nginx 1.22.x

load_module modules/ngx_http_brotli_static_module.so;

worker_processes auto;
worker_rlimit_nofile 16384;

events {
    worker_connections 4096;
}

http {
    include mime.types;
    default_type application/octet-stream;

    charset utf-8;
    charset_types text/css text/javascript text/plain text/xml application/atom+xml;

    sendfile on;
    sendfile_max_chunk 512k;
    tcp_nopush on;
    keepalive_requests 256;
    keepalive_timeout 3m;
    server_tokens off;
    msie_padding off;

    client_max_body_size 1k;
    client_body_buffer_size 1k;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 1k;
    http2_recv_buffer_size 128k;
    http2_chunk_size 4k;

    client_body_timeout 30s;
    client_header_timeout 30s;
    send_timeout 30s;

    resolver [::1];
    resolver_timeout 15s;

    http2_max_concurrent_streams 16;
    limit_conn_status 429;
    limit_conn_zone $binary_remote_addr zone=addr-limit:10m;
    limit_conn addr-limit 128;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers on;
    ssl_conf_command Options PrioritizeChaCha;

    ssl_certificate /etc/letsencrypt/live/grapheneos.social/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/grapheneos.social/privkey.pem;

    # maintained by nginx-rotate-session-ticket-keys in ramfs
    ssl_session_ticket_key session-ticket-keys/4.key;
    ssl_session_ticket_key session-ticket-keys/3.key;
    ssl_session_ticket_key session-ticket-keys/2.key;
    ssl_session_ticket_key session-ticket-keys/1.key;
    ssl_session_timeout 1d;
    ssl_buffer_size 4k;

    ssl_trusted_certificate /etc/letsencrypt/live/grapheneos.social/chain.pem;
    ssl_stapling on;
    ssl_stapling_verify on;
    # maintained by certbot-ocsp-fetcher
    ssl_stapling_file ocsp-cache/grapheneos.social.der;

    log_format main '$remote_addr - $remote_user [$time_local] '
                    '"$request_method $scheme://$host$request_uri $server_protocol" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"';
    access_log syslog:server=unix:/dev/log,nohostname main;
    error_log syslog:server=unix:/dev/log,nohostname;
    log_not_found off;

    gzip_proxied any;
    gzip_vary on;

    if_modified_since before;

    aio threads;
    aio_write on;

    server {
        listen 80 backlog=4096;
        listen [::]:80 backlog=4096;
        server_name www.grapheneos.social grapheneos.social;

        root /srv/certbot;

        # use $host to set up HSTS for redirect domains
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name www.grapheneos.social;

        root /var/empty;

        return 301 https://grapheneos.social$request_uri;
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    upstream backend {
        server 127.0.0.1:3000 fail_timeout=0;
    }

    upstream streaming {
        server 127.0.0.1:4000 fail_timeout=0;
    }

    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=CACHE:10m inactive=7d max_size=1g;

    server {
        listen 443 ssl http2 backlog=4096;
        listen [::]:443 ssl http2 backlog=4096;
        server_name grapheneos.social;

        client_max_body_size 80m;

        root /var/lib/mastodon/public;

        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml image/x-icon;

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        location /.well-known/acme-challenge/ {
            root /srv/certbot;
        }

        location / {
            try_files $uri @proxy;
        }

        # If Docker is used for deployment and Rails serves static files,
        # then needed must replace line `try_files $uri =404;` with `try_files $uri @proxy;`.
        location = /sw.js {
            add_header Cache-Control "public, max-age=604800, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
            try_files $uri =404;
        }

        location ~ ^/assets/ {
            add_header Cache-Control "public, max-age=2419200, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
            try_files $uri =404;
        }

        location ~ ^/avatars/ {
            add_header Cache-Control "public, max-age=2419200, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
            try_files $uri =404;
        }

        location ~ ^/emoji/ {
            add_header Cache-Control "public, max-age=2419200, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
            try_files $uri =404;
        }

        location ~ ^/headers/ {
            add_header Cache-Control "public, max-age=2419200, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
            try_files $uri =404;
        }

        location ~ ^/packs/ {
            add_header Cache-Control "public, max-age=2419200, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
            try_files $uri =404;
        }

        location ~ ^/shortcuts/ {
            add_header Cache-Control "public, max-age=2419200, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
            try_files $uri =404;
        }

        location ~ ^/sounds/ {
            add_header Cache-Control "public, max-age=2419200, must-revalidate";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
            try_files $uri =404;
        }

        location ~ ^/system/ {
            add_header Cache-Control "public, max-age=2419200, immutable";
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
            try_files $uri =404;
        }

        location ^~ /api/v1/streaming {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Proxy "";

            proxy_pass http://streaming;
            proxy_buffering off;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        location @proxy {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Proxy "";
            proxy_pass_header Server;

            proxy_pass http://backend;
            proxy_buffering on;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_cache CACHE;
            proxy_cache_valid 200 7d;
            proxy_cache_valid 410 24h;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            add_header X-Cached $upstream_cache_status;
            add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
            proxy_hide_header Strict-Transport-Security;
        }

        error_page 404 500 501 502 503 504 /500.html;
    }


    server {
        listen 80;
        listen [::]:80;
        server_name mta-sts.grapheneos.social;

        root /var/empty;

        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name mta-sts.grapheneos.social;

        root /srv/mta-sts;

        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        location = / {
            return 301 https://grapheneos.org/articles/grapheneos-servers;
        }

        location = /.well-known/mta-sts.txt {}

        location /.well-known/acme-challenge/ {
            root /srv/certbot;
        }

        location / {
            return 404;
        }
    }
    server {
        listen unix:/run/nginx/status.sock;

        root /var/empty;

        location = /nginx_status {
            stub_status;
            access_log off;
        }

        location / {
            return 404;
        }
    }
}
